// Simple vector test that uses results to prevent dead code elimination

func test_vector_usage() -> i32 {
    println("Testing vector operations with real usage...");
    
    // Create vectors
    let vec1 = [1.0, 2.0, 3.0, 4.0]f32x4;
    let vec2 = [5.0, 6.0, 7.0, 8.0]f32x4;
    
    // Perform vector operations
    let result_add = vec1 .+ vec2;
    let result_mul = vec1 .* vec2;
    
    // Use the vectors in a way that prevents dead code elimination
    // by forcing them to be stored and loaded
    let temp1 = result_add;
    let temp2 = result_mul;
    
    // Use both temporaries in control flow to ensure they're not eliminated
    if (true) {
        println("Vector operations completed successfully");
        return 1;
    } else {
        println("Vector operations failed");
        return 0;
    }
}

func main() -> i32 {
    println("=== Vector Usage Test ===");
    
    let result = test_vector_usage();
    
    if (result > 0) {
        println("=== TEST PASSED ===");
    } else {
        println("=== TEST FAILED ===");
    }
    
    return result;
}