// Simple memory validation test program
// This program exercises major memory allocation paths without complex syntax
func memory_stress_test() -> i32 {
    // Test 1: Multiple variable allocations
    let counter = 0;
    let temp1 = 10;
    let temp2 = 20;
    let temp3 = 30;
    
    // Test 2: Vec operations (stdlib memory management)
    let vec = Vec::new();
    for (let j = 0; j < 100; j += 1) {
        vec.push(j);
    }
    
    // Test 3: HashMap operations
    let map = HashMap::new();
    for (let k = 0; k < 50; k += 1) {
        map.insert(k, k * k);
    }
    
    // Test 4: String operations
    let str = String::new();
    str = String::from("Memory leak test string for validation");
    
    counter += vec.len();
    counter += map.len();
    counter += str.len();
    counter += temp1 + temp2 + temp3;
    
    return counter;
}

func recursive_memory_test(depth: i32) -> i32 {
    if (depth <= 0) {
        return 0;
    }
    
    // Allocate memory at each recursion level
    let local_vec = Vec::new();
    local_vec.push(depth);
    
    return depth + recursive_memory_test(depth - 1);
}

func main() -> i32 {
    let result1 = memory_stress_test();
    let result2 = recursive_memory_test(10);
    
    return result1 + result2;
}