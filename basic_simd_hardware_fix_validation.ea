// basic_simd_hardware_fix_validation.ea
// This program MUST work completely after fixing the hardware compatibility issue in basic_simd.ea
// Tests that i32x4 vectors work on baseline hardware (SSE support)

func test_simd_hardware_compatibility() -> i32 {
    // Test basic SIMD operations with hardware-compatible vector sizes
    let vec1 = [1.0, 2.0, 3.0, 4.0]f32x4;
    let vec2 = [5.0, 6.0, 7.0, 8.0]f32x4;
    
    // Use i32x4 instead of i32x8 for baseline hardware compatibility
    let int_vec = [1, 2, 3, 4]i32x4;
    
    // Element-wise operations
    let result = vec1 .+ vec2;  // Should work on SSE
    let product = vec1 .* vec2; // Should work on SSE
    
    // Bitwise operations with compatible vector size
    let mask = int_vec .& [0xFF, 0xFF, 0xFF, 0xFF]i32x4;
    
    // Return success indicator
    return 42;
}

func main() -> () {
    let result = test_simd_hardware_compatibility();
    
    // If we get here without type errors, the hardware compatibility fix worked
    if (result == 42) {
        print("Basic SIMD hardware fix validation PASSED");
    } else {
        print("Basic SIMD hardware fix validation FAILED");
    }
    
    return;
}